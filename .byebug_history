c
@emi.order(month: :asc).first
@emi.order(month: :asc)
@emi.last
@emi.first
@emi = NoEmi.where(loan_id: @loan.id)
@emi = NoEmi.where(loan_id: @loan.id).first
@emi = NoEmi.where(loan_id: @loan.id ).count
@emi = NoEmi.where(loan_id: @loan.id )
@loan = Loan.find(params[:id])
c
duration_month
self.duration_month = duration_year * 12
self.duration_month
duration_year
duration_month.to_i
duration_month
range
c
@emi = NoEmi.where(loan_id: @loan.id )
@loan = Loan.find(params[:id])
c
@emi = NoEmi.where(loan_id: @loan.id )
Customer.find_by(params[:customer_id])
Customer.find(params[:customer_id])
Customer.find(params[:id])
@emi = NoEmi.where(loan_id: @loan.id )
@loan = Loan.find(params[:id])
c
@emi
@emi = NoEmi.where(loan_id: @loan.id )
@loan = Loan.find(params[:id])
c
@loan = Loan.find(params[:id])
@loan = Loan.find(params[:loan_id])
c
self.roi
self
c
NoEmi.create(loan_id: self.id, due_at: due, status: "unpaid", month: i, principal: p_amount, interest_amount: i_amount)
due = self.started_at.advance(months: i)
due = self.started_at.advance(months: inc)
c
due = self.started_at.advance(months: inc)
c
self.started_at
due
c
range
c
loan_params
@loan.errors.messages
@loan.save
c
@loan.save
@loan = Loan.new(loan_params)
loan_params
c
loan_params
c
loan_params
c
loan_params
@loan.errors.messages
@loan.save
@loan
@customer
c
@customer = Customer.find(params["customer_id"])
Customer.find(params["customer_id"])
@customer.find(params["customer_id"])
@customer.find(params[:customer_id])
@customer.find(params[:id])
params
c
